#!/usr/bin/python3
# -*- coding: utf8 -*-
#
# Python Script Install Differents Packages :
# Made in France by Mazzilli Baptiste (maba11@gmail.com)
# Created and Tested in Python3.9 on Ubuntu Server v.20.04.2 LTS
#
# Import Plugins for Bash commands, Apt Package, MYSQL Query:
import subprocess
import mysql.connector
# Print Instructions at launch (Main Menu) :
print()
print("Lancement Programme Installation Réseau en cours ...")
print()
print("1 - Installer un Serveur Web (Apache / NginX)")
print()
print("2 - Installer un Serveur Wordpress (Apache - PHP - MYSQL)")
print()
print("3 - Installer un Serveur de Fichiers (NFS / SFTP)")
print()
print("4 - Installer un Routeur (DHCP - DNS - NTP - Network Forwarding)")
print()
print("5 - Installer un Serveur LDAP (OpenLDAP)")
print()
print("6 - Quitter le Script")
print()
# String User Answer :
user_answer = ("Que voulez-vous faire ? (1, 2, 3, 4, 5, 6) : ")
# While user doesn't choose answer 1 or 2 or 3 or 4 or 5 or 6, display input "user_answer" :
while user_answer != "1" and user_answer != "2" and user_answer != "3" and user_answer != "4" and user_answer != "5" and user_answer != "6":
# Asking user what he wants to do (Main Menu) :
    user_answer = input("Que voulez-vous faire ? (1, 2, 3, 4, 5, 6) : ")
# If Statements for Menu Options :
# Choice N°1 : Install Web Server (Apache or NginX Package) :
if user_answer == "1":
  print()
  user_answer_web = input("Quel serveur Web voulez-vous installer ? (1 = Apache / 2 = NginX) : ")
  if user_answer_web =="1":
    print()
    print("Installation d'Apache en cours ... ")
    print()
    print("Mises à Jour en cours ... ")
    print()
    subprocess.call(["sudo", "apt-get", "update"])
    subprocess.call(["sudo", "apt-get", "upgrade", "-y"])
    subprocess.call(["sudo", "apt-get", "dist-upgrade", "-y"])
    subprocess.call(["sudo", "apt-get", "autoremove", "-y"])
    subprocess.call(["clear"])
    subprocess.call(["sudo", "apt-get", "install", "apache2", "-y"])
    print()
    print("Serveur Apache installé avec succès !")
    print()
  elif user_answer_web =="2":
    print()
    print("Installation de NginX en cours ... ")
    print()
    print("Mises à Jour en cours ... ")
    print()
    subprocess.call(["sudo", "apt-get", "update"])
    subprocess.call(["sudo", "apt-get", "upgrade", "-y"])
    subprocess.call(["sudo", "apt-get", "dist-upgrade", "-y"])
    subprocess.call(["sudo", "apt-get", "autoremove", "-y"])
    subprocess.call(["clear"])
    subprocess.call(["sudo", "apt-get", "install", "nginx", "-y"])
    print()
    print("Serveur NginX installé avec succès !")
    print()
  else:
    print()
    print("Choisissez une option d'installation valide . Fermeture du script ...")
    print()
# Choice N°2 : Install Wordpress Server (LAMP : Apache - MariaDB - PHP) :
elif user_answer == "2":
  print()
  print("Installation du serveur Wordpress en cours ... ")
  print()
  print("Mises à Jour en cours ... ")
  print()
  subprocess.call(["sudo", "apt-get", "update"])
  subprocess.call(["sudo", "apt-get", "upgrade", "-y"])
  subprocess.call(["sudo", "apt-get", "dist-upgrade", "-y"])
  subprocess.call(["sudo", "apt-get", "autoremove", "-y"])
  subprocess.call(["clear"])
  subprocess.call(["sudo", "apt-get", "install", "apache2", "php7.4-fpm", "php7.4-mysql", "mariadb-server", "-y"])
  subprocess.call(["sudo", "a2enmod", "proxy_fcgi", "setenvif"])
  subprocess.call(["sudo", "a2enconf", "php7.4-fpm"])
  subprocess.call(["sudo", "systemctl", "restart", "apache2"])
  subprocess.call(["clear"])
  print()
  print("Packets Web installés avec succès !")
  print()
  print("Configuration des services Web  ... ")
  print()
  print("Création et configuration de la base de données ...")
  print()
  user_answer_db_name = input ("Quel nom pour la base de données Wordpress ? : ")
  print()
  user_answer_db_user = input ("Quel nom d'utilisateur pour la base de données Wordpress ? : ")
  print()
  user_answer_db_password = input ("Quel mot de passe de l'utilisateur pour la base de données Wordpress ? : ")
  print()
# Database Queries :
  db_connection = mysql.connector.connect(
  host= "localhost",
  user= "user1",
  passwd= "password1"
  )
  db_cursor = db_connection.cursor()
  db_cursor.execute("CREATE DATABASE {}".format(user_answer_db_name))
  db_cursor.execute("CREATE USER '{}'@localhost".format(user_answer_db_user))
  db_cursor.execute("GRANT ALL ON wordpressdb.* TO'{}'".format(user_answer_db_user))
  print("Base de données & Utilisateur crées avec succès !")
  print()
  print("Suppression du fichier de configuration Apache par défaut ...")
  subprocess.call(["sudo", "rm", "-rif", "/var/www/html/index.html"])
  print()
  print("Téléchargement de l'archive Wordpress en cours ...")
  print()
  subprocess.call(["wget", "-q", "-c", "http://wordpress.org/latest.tar.gz"])
  print("Extraction et déplacement de l'archive en cours ...")
  subprocess.call(["tar", "-xzf", "latest.tar.gz"])
  subprocess.call(["sudo", "mv", "wordpress/*", "/var/www/html/"])
  print()
  print("Extraction et Déplacement des fichiers Wordpress terminés.")
  print()
  print("Serveur Wordpress installé avec succès !")
  print()
  print("Vous pouvez maintenant configurer votre Site Wordpress depuis votre navigateur Internet !")
  print()
# Choice N°3 : Install Files Server (NFS - SFTP Protocols) :
elif user_answer == "3":
  print()
  user_answer_files = input("Voulez-vous installer un Serveur de fichiers ? (1 = NFS / 2 = SFTP) : ")
  if user_answer_files =="1":
    print()
    print("Installation d'un serveur de fichiers NFS en cours ... ")
    print()
    print("Mises à Jour en cours ... ")
    print()
    subprocess.call(["sudo", "apt-get", "update"])
    subprocess.call(["sudo", "apt-get", "upgrade", "-y"])
    subprocess.call(["sudo", "apt-get", "dist-upgrade", "-y"])
    subprocess.call(["sudo", "apt-get", "autoremove", "-y"])
    subprocess.call(["clear"])
    subprocess.call(["sudo", "apt-get", "install", "nfs-kernel-server", "-y"])
    print()
    print("Serveur de fichiers NFS installé avec succès !")
    print()
  elif user_answer_files =="2":
    print()
    print("Installation d'un serveur de fichiers SFTP en cours ... ")
    print()
    print("Mises à Jour en cours ... ")
    print()
    subprocess.call(["sudo", "apt-get", "update"])
    subprocess.call(["sudo", "apt-get", "upgrade", "-y"])
    subprocess.call(["sudo", "apt-get", "dist-upgrade", "-y"])
    subprocess.call(["sudo", "apt-get", "autoremove", "-y"])
    subprocess.call(["clear"])
    subprocess.call(["sudo", "apt-get", "install", "vsftpd", "-y"])
    print()
    print("Serveur de fichiers SFTP installé avec succès !")
    print()
  else:
    print()
    print("Choisissez une option d'installation valide . Fermeture du script ...")
    print()
# Choice N°4 : Install "Router" Services (DHCP - DNS - NTP - Configuration of Network Cards) :
elif user_answer == "4":
  print()
  print("Installation d'un pack Routeur en cours ... ")
  print()
  print("Mises à Jour en cours ... ")
  print()
  subprocess.call(["sudo", "apt-get", "update"])
  subprocess.call(["sudo", "apt-get", "upgrade", "-y"])
  subprocess.call(["sudo", "apt-get", "dist-upgrade", "-y"])
  subprocess.call(["sudo", "apt-get", "autoremove", "-y"])
  subprocess.call(["clear"])
  subprocess.call(["sudo", "apt-get", "install", "isc-dhcp-server", "-y"])
  print()
  print("Serveur DHCP installé avec succès !")
  print()
  subprocess.call(["sudo", "apt-get", "install", "bind9", "-y"])
  print()
  print("Serveur DNS installé avec succès !")
  subprocess.call(["sudo", "apt-get", "install", "chrony", "-y"])
  print()
  subprocess.call(["clear"])
  print("Serveur NTP installé avec succès !")
  print()
  print("Affichage des différentes sources choisis par le Serveur NTP ...")
  print()
  subprocess.call(["sudo", "chronyc", "sources"])
  print()
  print("Configuration du Serveur DHCP ...")
  print()
  subprocess.call(["sudo", "echo", "option domain-name ""home.lan"";", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "option domain-name-servers 9.9.9.9, 1.1.1.1;", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "authoritative;", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "default-lease-time 3600e;", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "max-lease-time 7200;", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "subnet 192.168.37.0 netmask 255.255.255.0 {", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "  option routers 192.168.37.20;", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "  option subnet-mask 255.255.255.0;", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "  option domain-search ""home.lan"";", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "  option domain-name-servers 1.1.1.1;", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "  range 192.168.37.30 192.168.37.50;", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "echo", "}", ">>", "/etc/dhcp/dhcpd.conf"])
  subprocess.call(["sudo", "sed", "-i", ""'s/INTERFACESv4=""/INTERFACESv4="ens37"/g'"", "/etc/default/isc-dhcp-server"])
  print()
  print("Serveur Routeur installé avec succès ! ")
  print()
# Choice N°5 : Install LDAP Server (OpenLDAP) :
elif user_answer == "5":
  print()
  print("Installation d'un Serveur LDAP en cours ...")
  print()
  subprocess.call(["sudo", "apt-get", "update"])
  subprocess.call(["sudo", "apt-get", "upgrade", "-y"])
  subprocess.call(["sudo", "apt-get", "dist-upgrade", "-y"])
  subprocess.call(["sudo", "apt-get", "autoremove", "-y"])
  subprocess.call(["sudo", "apt-get", "install", "slapd", "ldap-utils", "-y"])
  subprocess.call(["clear"])
  print()
  print("Configuration de la base LDAP. Demande de mot de passe pour utilisateur Admin du Serveur LDAP")
  print()
  print("Affichage du DIT créer par LDAP")
  print()
  subprocess.call(["sudo", "ldapsearch", "-Q", "-L", "-Y", "EXTERNAL", "-H", "ldapi:///", "-b", "dc=entreprise,dc=com"])
  print()
  print("Creation de 2 utilisateurs tests dans le DIT")
  print()
  subprocess.call(["sudo", "touch", "structure.ldif"])
  subprocess.call(["sudo", "echo", "dn: ou=Personnes,dc=entreprise,dc=com", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "objectclass: organizationalUnit", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "ou: Personnes", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "description: Employes de l entreprise", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "dn: ou=Machines,dc=entreprise,dc=com", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "objectclass: organizationalUnit", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "ou: Machines", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "description: Ordinateurs de l entreprise", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "dn: cn=Marie Dupond,ou=Personnes,dc=entreprise,dc=com", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "objectClass: inetOrgPerson", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "givenName: Marie", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "sn: Dupond", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "cn: Marie Dupond", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "uid: mariedupond", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "userPassword: mdupond", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "dn: cn=Marc Dupond,ou=Personnes,dc=entreprise,dc=com", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "objectClass: inetOrgPerson", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "givenName: Marc", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "sn: Dupond", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "cn: Marc Dupond", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "uid: marcdupond", ">>", "structure.ldif"])
  subprocess.call(["sudo", "echo", "userPassword: mdupond2", ">>", "structure.ldif"])
  print()
  print("Mot de Passe utilisateur LDAP ?")
  print()
  subprocess.call(["sudo", "ldapadd", "-x", "-W", "-D", "“cn=admin,dc=entreprise,dc=com”", "-H", "ldapi://localhost", "-f", "structure.ldif"])
  print()
  print("Affichage du DIT avec les Nouveaux Utilisateurs")
  print()
  subprocess.call(["sudo", "ldapsearch", "-Q", "-L", "-Y", "EXTERNAL", "-H", "ldapi:///", "-b", "dc=entreprise,dc=com"])
  print()
  print("Serveur LDAP installé avec Succès !")
  print()
# Choice N°6 : Closing Script :
elif user_answer == "6":
  print()
  print("Fermeture du script ...")
  print()
else:
  pass
# END
